{"version":3,"sources":["Readme.md","components/examples/example.js","components/examples/exampleCode.js","components/examples/exampleComponent.js","components/examples/exampleHeader.js","components/examples/exampleProps.js","components/header/header.js","components/layout/container.js","components/layout/row.js","components/layout/grid.js","components/layout/column.js","components/readme/readme.js","components/reuseRef/reuseRefInput.js","components/reuseRef/reuseRef.js","webpack:///./src/components/reuseRef/reuseRefInput.js?d80d","components/section/section.js","components/slider/slider.js","components/themeProvider/themeProvider.js","components/themeProvider/appReThemeProvider.js","components/typography/textWrapper.js","components/typography/code.js","components/typography/caption.js","components/typography/h2.js","components/typography/h1.js","components/typography/h4.js","components/typography/h3.js","components/typography/h5.js","components/typography/pre.js","components/typography/h6.js","components/typography/link.js","components/typography/p.js","components/typography/pAlt.js","components/useTheme/useThemeButton.js","components/typography/subtitle.js","components/typography/subtitleAlt.js","components/useTheme/useTheme.js","webpack:///./src/components/useTheme/useThemeButton.js?dcc3","components/useThemeActive/useThemeActiveButton.js","components/useThemeActive/useThemeActive.js","webpack:///./src/components/useThemeActive/useThemeActiveButton.js?9b79","components/useThemeFocus/useThemeFocusInput.js","components/useThemeFocus/useThemeFocus.js","webpack:///./src/components/useThemeFocus/useThemeFocusInput.js?ee49","components/useThemeHover/useThemeHoverButton.js","components/useThemeHover/useThemeHover.js","webpack:///./src/components/useThemeHover/useThemeHoverButton.js?4309","components/withTheme/withThemeButton.js","components/withTheme/withTheme.js","webpack:///./src/components/withTheme/withThemeButton.js?6e48","screens/app.js","theme/app.js","theme/helpers.js","theme/layout.js","theme/index.js","theme/components.js","theme/display.js","theme/join.js","theme/transition.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Example","withTheme","props","theme","isToggled","headerText","useState","toggled","setToggled","sectionStyle","join","get","style","text","description","codeText","component","allowedProps","length","allowed","allowedArgs","title","ExampleCode","H5","Pre","Code","children","ExampleComponent","ExampleHeader","useTheme","TextComp","H4","ExampleProps","propStyle","headerStyle","map","prop","Fragment","key","type","default","buildProp","Header","H2","iconStyle","headerTheme","useThemeHover","hover","ref","styledHeader","onClick","icon","faAngleDown","Container","args","onPress","flexDir","size","flex","width","builtProps","flexDirection","Row","layout","row","buildCenterStyles","isCenter","justifyContent","alignItems","Grid","isArr","reduce","attrs","child","isRow","center","toString","toLowerCase","getChildAttrs","grid","total","columns","colWidth","parseFloat","toFixed","column","minWidth","Readme","content","setContent","setHeight","readmeRef","useRef","useEffect","articleEl","current","height","offsetHeight","fetch","readmePath","then","response","marked","className","dangerouslySetInnerHTML","__html","ReuseRefInput","customInput","components","hoverRef","themeWithHover","useThemeFocus","focus","htmlFor","label","id","placeholder","input","spanText","spanBorder","ReuseRefExample","Section","Element","index","getHeight","Slider","slideRef","defHeight","useLayoutEffect","curHeight","sliderStyle","maxHeight","isFunc","parentHeight","href","ThemeProviderExample","textWrapper","El","themeKey","textStyles","link","UseThemeButton","button","UseThemeExample","UseThemeActiveButton","useThemeActive","UseThemeActiveExample","UseThemeFocusInput","focusInput","deepMerge","UseThemeFocusExample","UseThemeHoverButton","UseThemeHoverExample","WithThemeButton","WithThemeExample","AppScreen","appStyle","marginTop","gridStyle","repo","colorBackground","colorOctocat","textStyle","backgroundColor","color","borderBottom","app","marginBottom","header","cursor","transition","section","example","wrapper","paddingLeft","paddingRight","container","display","gridTemplateColumns","border","borderLeft","borderTop","padding","allSides","spaceHelper","amount","sides","styles","side","capitalize","unitsHelper","value","isStr","isNum","parseInt","all","full","vert","left","right","hor","paddingTop","paddingBottom","top","bottom","margin","marginLeft","marginRight","wrap","flexWrap","dir","direction","justify","start","end","between","around","even","align","stretch","base","setDefaultTheme","borderRadius","outline","position","boxSizing","maxWidth","fontFamily","fontSize","fontWeight","background","transformOrigin","transform","divider","click","noRadius","arg1","arg2","sources","isObj","arg","minHeight","overflowY","overflowX","float","none","overflow","rotate","180","App","merge","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b9b14bc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Readme.538f1ba7.md\";","import React, { useState } from 'react'\nimport { withTheme } from 're-theme'\nimport { get } from 'jsutils'\nimport PropTypes from 'prop-types'\nimport {\n  ExampleCode,\n  ExampleComponent,\n  ExampleHeader,\n  ExampleProps,\n  Slider\n} from '../../components'\n\nexport const Example = withTheme(props => {\n\n  const { theme, isToggled, headerText } = props\n  const [ toggled, setToggled ] = useState(isToggled || false)\n\n  const sectionStyle = theme.join(\n    get(theme, 'app.section'),\n    get(theme, 'margin.bottom'),\n    props.style\n  )\n\n  return (\n    <section style={ sectionStyle }>\n      { props.headerText && (\n        <ExampleHeader text={ headerText } toggled={toggled} setToggled={setToggled} />\n      )}\n      <Slider style={ get(theme, 'app.example.wrapper') } toggled={ toggled } >\n        <span>\n          { props.description }\n        </span>\n        <div style={ get(theme, 'padding.bottom') } >\n          { props.codeText && ( <ExampleCode text={ props.codeText } /> )}\n          { props.component && ( <ExampleComponent component={ props.component } /> )}\n          { props.allowedProps && props.allowedProps.length && (\n            <ExampleProps allowed={ props.allowedProps } />\n          )}\n          { props.allowedArgs && props.allowedArgs.length && (\n            <ExampleProps allowed={ props.allowedArgs } title={ 'Arguments' } />\n          )}\n        </div>\n      </Slider>\n    </section>\n  )\n\n})\n\nExample.propTypes = {\n  theme: PropTypes.object,\n  style: PropTypes.object,\n  headerText: PropTypes.string,\n  codeText: PropTypes.string,\n}\n","import React from 'react'\nimport { Pre, Code, H5 } from '../../components'\n\nexport const ExampleCode = props => {\n  return (\n    <>\n      <H5>Code</H5>\n      <Pre>\n        <Code>\n          { props.children || props.text }\n        </Code>\n      </Pre>\n    </>\n  )\n}","import React from 'react'\nimport { H5 } from '../../components'\n\nexport const ExampleComponent = (props) => {\n  return (\n    <>\n    <H5>Component</H5>\n    { props.component }\n    <br/>\n    </>\n  )\n}","import React from 'react'\nimport { H4, Header } from '../../components'\nimport { useTheme } from 're-theme'\n\nexport const ExampleHeader = props => {\n\n  const  { toggled, setToggled } = props\n  \n  const theme = useTheme()\n\n  const style = theme.join(theme, [\n    'flex.display',\n    'flex.wrap',\n    'padding.vert',\n    'margin.bottom'\n  ])\n  \n  return (\n    <Header\n      isToggled={ toggled }\n      setToggled={ setToggled }\n      style={ style }\n      title={ props.children || props.text }\n      TextComp={ H4 }\n    />\n  )\n\n}","import React from 'react'\nimport { useTheme } from 're-theme'\nimport { H5 } from '../../components'\nimport { get } from 'jsutils'\n\n// type\n// key\n// description\n// default\n\nconst buildProp = (prop, style) => {\n  return (\n    <React.Fragment key={ prop.key } >\n      <span style={ style } >\n        { prop.key }\n      </span>\n      <span style={ style } >\n        { prop.type }\n      </span>\n      <span style={ style } >\n        { prop.default }\n      </span>\n      <span style={ style } >\n        { prop.description }\n      </span>\n    </React.Fragment>\n  )\n}\n\nconst buildHeader = style => {\n  return (\n    <>\n      <span style={ style } >\n        <b>Name</b>\n      </span>\n      <span style={ style } >\n        <b>Type</b>\n      </span>\n      <span style={ style } >\n        <b>Default</b>\n      </span>\n      <span style={ style } >\n        <b>Description</b>\n      </span>\n    </>\n  )\n}\n\nexport const ExampleProps = ({ allowed, title }) => {\n  title = title || 'Props'\n  const theme = useTheme()\n  const propStyle = get(theme, 'app.example.grid.prop')\n  const headerStyle = get(theme, 'app.example.grid.header')\n\n  return (\n    <>\n      <H5>{ title }</H5>\n      <div style={ get(theme, 'app.example.grid.container') } >\n        { buildHeader(theme.join(propStyle, headerStyle)) }\n        { allowed.map(prop => buildProp(prop, propStyle))}\n      </div>\n    </>\n  )\n}","import React from 'react'\nimport { useThemeHover, useTheme } from 're-theme'\nimport { H2 } from '../../components'\nimport { get } from 'jsutils'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons'\n\nexport const Header = ({ title, isToggled, setToggled, TextComp, style }) => {\n  \n  TextComp = TextComp || H2\n  const theme = useTheme()\n\n  const iconStyle = theme.join(\n    get(theme, 'app.icons.header.grid'),\n    get(theme, 'transition.rotate.default'),\n    get(theme, 'layout.float.right'),\n    isToggled && get(theme, 'transition.rotate.180')\n  )\n\n  const headerTheme = get(theme, 'app.header')\n  const [ ref, headerStyle ] = useThemeHover(headerTheme.default, headerTheme.hover)\n  \n  const styledHeader = isToggled\n    ? theme.join(headerTheme.default, headerTheme.hover)\n    : headerStyle\n  \n  return (\n    <TextComp style={ style } onClick={ () => setToggled(!isToggled) } >\n      <div ref={ ref } style={ styledHeader } >\n        { title }\n        <span style={ iconStyle } >\n          <FontAwesomeIcon icon={ faAngleDown } />\n        </span>\n      </div>\n    </TextComp>\n  )\n}","/* eslint no-unused-vars: [\"error\", { \"ignoreRestSiblings\": true }]*/\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nexport const Container = args => {\n  const { onPress, children, flexDir, size, style, theme, ...props } = args\n  // Get flex type based on size or style\n  const flex = size ? 0 : props.style && props.style.width ? 0 : 1\n  const builtProps = {\n    style: { flex, flexDirection: flex && flexDir, ...style },\n  }\n\n  return (\n    <div {...props} {...builtProps} onClick={onPress}>\n      { children }\n    </div>\n  )\n}\n\nContainer.propTypes = {\n  theme: PropTypes.object,\n  style: PropTypes.object,\n  onPress: PropTypes.func,\n  flexDir: PropTypes.string,\n  size: PropTypes.number,\n}\n","import React from 'react'\nimport { withTheme } from 're-theme'\nimport { Container } from './container'\nimport PropTypes from 'prop-types'\n\nexport const Row = withTheme(({ children, ...props }) => {\n  const theme = props.theme || { layout: {} }\n\n  return (\n    <Container\n      {...props}\n      theme={theme}\n      style={{ ...theme.layout.row, ...props.style }}\n      flexDir='row'\n    >\n      { children }\n    </Container>\n  )\n})\n\nRow.propTypes = {\n  center: PropTypes.string,\n  theme: PropTypes.object,\n  style: PropTypes.object,\n}\n","import React from 'react'\nimport { Container } from './container'\nimport { Row } from './row'\nimport PropTypes from 'prop-types'\nimport { withTheme } from 're-theme'\nimport { isArr } from 'jsutils'\n\n// alignItems = y-axis\n// justifyContent = x-axis\n\n/**\n * Builds the styles based on the passed in isCenter param\n *\n * @param {*} isCenter - how to center the children. Should be x / y || true\n * @returns { object } - built center styles\n */\nconst buildCenterStyles = isCenter => {\n  return isCenter === 'x' || isCenter === 'xaxis' || isCenter === 'x-axis'\n    ? { justifyContent: 'center' }\n    : isCenter === 'y' || isCenter === 'yaxis' || isCenter === 'y-axis'\n    ? { alignItems: 'center' }\n    : (isCenter && { alignItems: 'center', justifyContent: 'center' }) || {}\n}\n\n/**\n * Checks each child to determine if it's a column or row and if content is centered\n *\n * @param  { array || object } children - React Components\n * @return { bool }\n */\nconst getChildAttrs = children => {\n  children = (isArr(children) && children) || [ children ]\n\n  return children.reduce(\n    (attrs, child) => {\n      if (attrs.isRow && attrs.isCenter) return attrs\n      if (!attrs.isRow && (child && child.type === Row)) attrs.isRow = true\n      if (!attrs.isCenter && (child && child.props && child.props.center))\n        attrs.isCenter = child.props.center.toString().toLowerCase()\n\n      return attrs\n    },\n    { isRow: false, isCenter: false }\n  )\n}\n\nexport const Grid = withTheme(({ children, style, ...props }) => {\n  const { isRow, isCenter } = getChildAttrs(children)\n\n  return (\n    <Container\n      {...props}\n      flexDir={isRow ? 'column' : 'row'}\n      size={1}\n      style={{\n        ...props.theme.layout.grid,\n        ...style,\n        ...(isCenter && buildCenterStyles(isCenter)),\n      }}\n    >\n      { children }\n    </Container>\n  )\n})\n\nGrid.propTypes = {\n  theme: PropTypes.object,\n  style: PropTypes.object,\n}\n","import React from 'react'\nimport { withTheme } from 're-theme'\nimport { Container } from './container'\nimport PropTypes from 'prop-types'\n\nexport const Column = withTheme(({ children, size, center, ...props }) => {\n  const theme = props.theme || { layout: {} }\n  const total = props.theme.layout.columns || 12\n  size = size > total ? total : size\n  const colWidth = parseFloat(size * (100 / total)).toFixed(4)\n\n  return (\n    <Container\n      {...props}\n      theme={theme}\n      size={size}\n      style={{\n        ...theme.layout.column,\n        ...props.style,\n        minWidth: `${colWidth}%`,\n      }}\n      flexDir='column'\n    >\n      { children }\n    </Container>\n  )\n})\n\nColumn.propTypes = {\n  size: PropTypes.number.isRequired,\n  center: PropTypes.string,\n  theme: PropTypes.object,\n  style: PropTypes.object,\n}\n","import React, { useState, useEffect, useRef } from 'react'\nimport marked from \"marked\"\nimport { get } from \"jsutils\"\nimport readmePath from '../../Readme.md';\nimport { withTheme } from 're-theme'\n\nexport const Readme = withTheme(props => {\n\n  const [ content, setContent ] = useState(null)\n  const { theme, setHeight } = props\n  const readmeRef = useRef()\n\n  const sectionStyle = theme.join(\n    get(theme, 'app.section'),\n    get(theme, 'margin.bottom'),\n    get(theme, 'padding.vert'),\n    props.style\n  )\n  \n  useEffect(() => {\n\n    const articleEl = readmeRef.current\n    const height = articleEl.offsetHeight > 0\n      ? articleEl.offsetHeight + 50\n      : articleEl.offsetHeight\n\n    articleEl && setHeight(height)\n\n    if(content) return\n    \n    fetch(readmePath)\n      .then(response => response.text())\n      .then(text => setContent(marked(text)))\n\n  }, [ content, readmeRef, setHeight ])\n\n\n  return (\n    <section className=\"read-me-wrapper\" style={ sectionStyle }>\n      <article ref={ readmeRef } dangerouslySetInnerHTML={{__html: content}}></article>\n    </section>\n  )\n\n})\n","import React from 'react'\nimport { useThemeFocus, useThemeHover, useTheme } from 're-theme'\n\nexport const ReuseRefInput = props => {\n  const { components: { customInput } } = useTheme()\n\n  const [ hoverRef, themeWithHover ] = useThemeHover(customInput.default, customInput.hover)\n  const [ ref, theme ] = useThemeFocus(themeWithHover, customInput.focus, { ref: hoverRef })\n\n  return (\n    <label htmlFor=\"customInput\" style={ theme.label }  >\n      <input ref={ ref } type=\"text\" id=\"customInput\" placeholder=\"&nbsp;\" style={ theme.input }  />\n      <span style={ theme.spanText } >Hover and Focus</span>\n      <span style={ theme.spanBorder } ></span>\n    </label>\n  )\n}","import React from 'react'\nimport { Example } from '../../components'\nimport { ReuseRefInput } from './reuseRefInput'\n\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport ReuseRefInputTxt from '!!raw-loader!./reuseRefInput.js'\n\nexport const ReuseRefExample = ({ isToggled }) => (<Example\n  isToggled={ isToggled }\n  headerText={ 'Reuse Hook Ref' }\n  component={ <ReuseRefInput title={ 'Reuse Hook Ref Input' } />}\n  codeText={ ReuseRefInputTxt }\n/>)\n","export default \"import React from 'react'\\nimport { useThemeFocus, useThemeHover, useTheme } from 're-theme'\\n\\nexport const ReuseRefInput = props => {\\n  const { components: { customInput } } = useTheme()\\n\\n  const [ hoverRef, themeWithHover ] = useThemeHover(customInput.default, customInput.hover)\\n  const [ ref, theme ] = useThemeFocus(themeWithHover, customInput.focus, { ref: hoverRef })\\n\\n  return (\\n    <label htmlFor=\\\"customInput\\\" style={ theme.label }  >\\n      <input ref={ ref } type=\\\"text\\\" id=\\\"customInput\\\" placeholder=\\\"&nbsp;\\\" style={ theme.input }  />\\n      <span style={ theme.spanText } >Hover and Focus</span>\\n      <span style={ theme.spanBorder } ></span>\\n    </label>\\n  )\\n}\";","import React, { useState } from 'react'\nimport { isArr, get } from 'jsutils'\nimport {\n  Grid,\n  Header,\n  Row,\n  Slider\n} from '../../components'\n\nexport const Section = ({ children, Element, toggled, style, theme, title }) => {\n  \n  children = children && ((isArr(children) && children) || [ children ])\n  const [ isToggled, setToggled ] = useState(toggled || false)\n\n  return (\n    <Grid style={ style } >\n      { title && (\n        <Header\n          style={ get(theme, 'app.grid.title') }\n          title={ title }\n          isToggled={ isToggled }\n          setToggled={ setToggled }\n        />\n      )}\n      <Slider toggled={ isToggled } Element={ Element } >\n        { children && children.map((child, index) => (\n          <Row key={ index } >\n            { child }\n          </Row>\n        )) }\n      </Slider>\n    </Grid>\n  )\n}\n","import React, { useState, useLayoutEffect, useRef } from 'react'\nimport { get, isFunc } from 'jsutils'\nimport { useTheme } from 're-theme'\n\nconst getHeight = (height, toggled) => {\n  return toggled\n    ? height\n    : height && !toggled\n      ? 0\n      : null\n}\n\nexport const Slider = props => {\n  \n  const theme = useTheme()\n\n  const slideRef = useRef(null)\n\n  const { defHeight, Element } = props\n  const [ height, setHeight ] = useState(defHeight || null)\n\n  useLayoutEffect(() => {\n    const curHeight = get(slideRef, 'current.offsetHeight')\n\n    if(curHeight === 0) return\n\n    height !== curHeight && setHeight(curHeight)\n  }, [ height ])\n\n  const sliderStyle = theme.join(\n    get(theme, 'transition.height'),\n    get(theme, 'layout.full.width'),\n    get(props, 'style'),\n    { maxHeight: getHeight(height, props.toggled) },\n  )\n\n  return (\n    <div ref={ slideRef } style={ sliderStyle } >\n      { isFunc(Element) && <Element setHeight={ setHeight } parentHeight={ height } /> }\n      { props.children }\n    </div>\n  )\n}\n","import React from 'react'\nimport { Example } from '../../components'\n\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport AppReThemeProviderTxt from '!!raw-loader!./appReThemeProvider.js'\n\nconst description = (\n  <p>\n    You must first wrap your app with the <b>ReThemeProvider</b> as shown below. The ReThemeProvider uses the <a href=\"https://reactjs.org/docs/context.html\" >React Context API</a> under the hood. This is <b>required</b> to allow all child components access to the <i>theme object.</i>\n  </p>\n)\n\nexport const ThemeProviderExample =({ toggled }) => (<Example\n  isToggled={ toggled }\n  headerText={ 'ReThemeProvider' }\n  description={ description }\n  codeText={ AppReThemeProviderTxt }\n  allowedProps={[\n    {\n      type: 'object',\n      key: 'theme',\n      description: 'App Theme object. Rules should be defined as CSS-in-JS format.',\n      default: '{}'\n    },\n    {\n      type: 'boolean',\n      key: 'merge',\n      description: 'Merge the passed in theme with the active theme.',\n      default: 'false'\n    }\n  ]}\n/>)\n","export default \"import { ReThemeProvider } from 're-theme'\\nimport appTheme from './path/to/theme'\\n\\nexport const ReThemeApp = () => {\\n  return (\\n    <ReThemeProvider theme={ appTheme } >\\n      <App />\\n    </ReThemeProvider>\\n  )\\n}\";","import React from 'react'\nimport { withTheme } from 're-theme'\n\nconst textWrapper = (El, themeKey) => {\n  return withTheme(props => {\n    const { theme, style, children, ...attrs } = props\n    const textStyles = (theme.text && (theme.text[themeKey] || theme.text[El])) || theme[El]\n\n    return (\n      <El {...attrs} style={theme.join(textStyles, style)}>\n        { children }\n      </El>\n    )\n  })\n}\n\nexport { textWrapper }\n","import { textWrapper } from './textWrapper'\nexport const Code = textWrapper('code')\n","import { textWrapper } from './textWrapper'\nexport const Caption = textWrapper('caption')\n","import { textWrapper } from './textWrapper'\nexport const H2 = textWrapper('h2')\n","import { textWrapper } from './textWrapper'\nexport const H1 = textWrapper('h1')\n","import { textWrapper } from './textWrapper'\nexport const H4 = textWrapper('h4')\n","import { textWrapper } from './textWrapper'\nexport const H3 = textWrapper('h3')\n","import { textWrapper } from './textWrapper'\nexport const H5 = textWrapper('h5')\n","import { textWrapper } from './textWrapper'\nexport const Pre = textWrapper('pre')","import { textWrapper } from './textWrapper'\nexport const H6 = textWrapper('h6')\n","import React from 'react'\nimport { withTheme } from 're-theme'\n\nconst Link = withTheme(props => {\n\n  const { children, style, theme, ...attrs } = props\n\n  return (\n    <a {...attrs} style={theme.join(theme.link, style)}>\n      { children }\n    </a>\n  )\n\n})\n\nexport { Link, Link as A }\n","import { textWrapper } from './textWrapper'\nexport const P = textWrapper('p', 'bodyText')\n","import { textWrapper } from './textWrapper'\nexport const PAlt = textWrapper('p', 'bodyTextTwo')\n","import React from 'react'\nimport { useTheme } from 're-theme'\n\nexport const UseThemeButton = props => {\n  const theme = useTheme()\n  return (\n    <button style={ theme.components.button.default } >\n      { props.children }\n    </button>\n  )\n}\n","import { textWrapper } from './textWrapper'\nexport const Subtitle = textWrapper('subtitleOne')\n","import { textWrapper } from './textWrapper'\nexport const SubtitleAlt = textWrapper('subtitleTwo')\n","import React from 'react'\nimport { Example } from '../../components'\nimport { UseThemeButton } from './useThemeButton'\n\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport UseThemeButtonTxt from '!!raw-loader!./useThemeButton.js'\n\nconst description = (\n  <p>\n    Import the <b>useTheme</b> <a href=\"https://reactjs.org/docs/hooks-intro.html\" >hook</a> to get access to the app theme. Uses the <a href=\"https://reactjs.org/docs/context.html\" >React Context API</a> under the hood. Works identically to the <b>withTheme HOC</b> but as a hook variant.\n  </p>\n)\nexport const UseThemeExample = ({ toggled }) => (<Example\n  isToggled={ toggled }\n  headerText={ 'useTheme' }\n  description={ description }\n  component={ <UseThemeButton>useTheme Button</UseThemeButton> }\n  codeText={ UseThemeButtonTxt }\n/>)","export default \"import React from 'react'\\nimport { useTheme } from 're-theme'\\n\\nexport const UseThemeButton = props => {\\n  const theme = useTheme()\\n  return (\\n    <button style={ theme.components.button.default } >\\n      { props.children }\\n    </button>\\n  )\\n}\\n\";","import React from 'react'\nimport { useThemeActive, useTheme } from 're-theme'\n\nexport const UseThemeActiveButton = props => {\n  const { components: { button } } = useTheme()\n  const [ ref, theme ] = useThemeActive(button.default, button.hover)\n\n  return (\n    <button ref={ ref } style={ theme } >\n      { props.children }\n    </button>\n  )\n}","import React from 'react'\nimport { Example } from '../../components'\nimport { UseThemeActiveButton } from './useThemeActiveButton'\n\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport UseThemeActiveButtonTxt from '!!raw-loader!./useThemeActiveButton.js'\n\nconst description = (\n  <p>\n    Use this hook to toggle between two styles based on the <b>active</b> state of the component. This hook should be combined with either the <b>withTheme HOC</b> or <b>useTheme hook</b> to get access to the theme.\n  </p>\n)\n\nexport const UseThemeActiveExample = ({ toggled }) => (<Example\n  isToggled={ toggled }\n  headerText={ 'useThemeActive' }\n  description={ description }\n  component={ <UseThemeActiveButton >useThemeActive Button</UseThemeActiveButton> }\n  codeText={ UseThemeActiveButtonTxt }\n  allowedArgs={[\n    {\n      type: 'object',\n      key: 'Default Style',\n      description: <span>Default style to use when <b>NOT</b> in an active state.</span>,\n      default: '{}'\n    },\n    {\n      type: 'object',\n      key: 'Active Style',\n      description: 'Active Style to use when in an active state',\n      default: '{}'\n    },\n    {\n      type: 'object',\n      key: 'Options',\n      description: 'Options object to change how the hook handles toggling between default and active styles.',\n      default: '{}'\n    },\n    {\n      type: 'object',\n      key: 'Options.ref',\n      description: 'Allows passing in a ref returned an other hook. This allows styles to change for multiple states.',\n      default: 'undefined'\n    },\n    {\n      type: 'object',\n      key: 'Options.noMerge',\n      description: 'When the active state is true, the default and active styles will be merged, with the active styles overriding the default styles. This is inline with how css works normally. To disable this, set the option to true.',\n      default: 'undefined'\n    },\n  ]}\n/>)\n","export default \"import React from 'react'\\nimport { useThemeActive, useTheme } from 're-theme'\\n\\nexport const UseThemeActiveButton = props => {\\n  const { components: { button } } = useTheme()\\n  const [ ref, theme ] = useThemeActive(button.default, button.hover)\\n\\n  return (\\n    <button ref={ ref } style={ theme } >\\n      { props.children }\\n    </button>\\n  )\\n}\";","import React from 'react'\nimport { deepMerge } from 'jsutils'\nimport { useThemeFocus, useTheme } from 're-theme'\n\nexport const UseThemeFocusInput = props => {\n  const { components: { customInput } } = useTheme()\n\n  const focusInput = deepMerge(customInput.hover, customInput.focus)\n  const [ ref, theme ] = useThemeFocus(customInput.default, focusInput)\n\n  return (\n    <label htmlFor=\"focusInput\" style={ theme.label }  >\n      <input ref={ ref } type=\"text\" id=\"focusInput\" placeholder=\"&nbsp;\" style={ theme.input }  />\n      <span style={ theme.spanText } >Focus Label</span>\n      <span style={ theme.spanBorder } ></span>\n    </label>\n  )\n}","import React from 'react'\nimport { Example } from '../../components'\nimport { UseThemeFocusInput } from './useThemeFocusInput'\n\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport UseThemeFocusInputTxt from '!!raw-loader!./useThemeFocusInput.js'\n\nconst description = (\n  <p>\n    Use this hook to toggle between two styles based on the <b>focus</b> state of the component. This hook should be combined with either the <b>withTheme HOC</b> or <b>useTheme hook</b> to get access to the theme.\n  </p>\n)\n\n\nexport const UseThemeFocusExample = ({ toggled }) => (<Example\n  isToggled={ toggled }\n  headerText={ 'useThemeFocus' }\n  description={ description }\n  component={ <UseThemeFocusInput title={ 'useThemeFocus Input' } /> }\n  codeText={ UseThemeFocusInputTxt }\n  allowedArgs={[\n    {\n      type: 'object',\n      key: 'Default Style',\n      description: <span>Default style to use when <b>NOT</b> in a focus state.</span>,\n      default: '{}'\n    },\n    {\n      type: 'object',\n      key: 'Focus Style',\n      description: 'Active Style to use when in a focus state',\n      default: '{}'\n    },\n    {\n      type: 'object',\n      key: 'Options',\n      description: 'Options object to change how the hook handles toggling between default and focus styles.',\n      default: '{}'\n    },\n    {\n      type: 'object',\n      key: 'Options.ref',\n      description: 'Allows passing in a ref returned an other hook. This allows styles to change for multiple states.',\n      default: 'undefined'\n    },\n    {\n      type: 'object',\n      key: 'Options.noMerge',\n      description: 'When the focus state is true, the default and focus styles will be merged, with the focus styles overriding the default styles. This is inline with how css works normally. To disable this, set the option to true.',\n      default: 'undefined'\n    },\n  ]}\n/>)\n","export default \"import React from 'react'\\nimport { deepMerge } from 'jsutils'\\nimport { useThemeFocus, useTheme } from 're-theme'\\n\\nexport const UseThemeFocusInput = props => {\\n  const { components: { customInput } } = useTheme()\\n\\n  const focusInput = deepMerge(customInput.hover, customInput.focus)\\n  const [ ref, theme ] = useThemeFocus(customInput.default, focusInput)\\n\\n  return (\\n    <label htmlFor=\\\"focusInput\\\" style={ theme.label }  >\\n      <input ref={ ref } type=\\\"text\\\" id=\\\"focusInput\\\" placeholder=\\\"&nbsp;\\\" style={ theme.input }  />\\n      <span style={ theme.spanText } >Focus Label</span>\\n      <span style={ theme.spanBorder } ></span>\\n    </label>\\n  )\\n}\";","import React from 'react'\nimport { useThemeHover, useTheme } from 're-theme'\n\nexport const UseThemeHoverButton = props => {\n  const { components: { button } } = useTheme()\n  const [ ref, theme ] = useThemeHover(button.default, button.hover)\n\n  return (\n    <button ref={ ref } style={ theme } >\n      { props.children }\n    </button>\n  )\n}","import React from 'react'\nimport { Example } from '../../components'\nimport { UseThemeHoverButton } from './useThemeHoverButton'\n\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport UseThemeHoverButtonTxt from '!!raw-loader!./useThemeHoverButton.js'\n\nconst description = (\n  <p>\n    Use this hook to toggle between two styles based on the <b>hover</b> state of the component. This hook should be combined with either the <b>withTheme HOC</b> or <b>useTheme hook</b> to get access to the theme.\n  </p>\n)\n\nexport const UseThemeHoverExample = ({ toggled }) => (<Example\n  isToggled={ toggled }\n  headerText={ 'useThemeHover' }\n  description={ description }\n  component={ <UseThemeHoverButton>useThemeHover Button</UseThemeHoverButton> }\n  codeText={ UseThemeHoverButtonTxt }\n  allowedArgs={[\n    {\n      type: 'object',\n      key: 'Default Style',\n      description: <span>Default style to use when <b>NOT</b> in a hover state.</span>,\n      default: '{}'\n    },\n    {\n      type: 'object',\n      key: 'Hover Style',\n      description: 'Active Style to use when in a hover state',\n      default: '{}'\n    },\n    {\n      type: 'object',\n      key: 'Options',\n      description: 'Options object to change how the hook handles toggling between default and hover styles.',\n      default: '{}'\n    },\n    {\n      type: 'object',\n      key: 'Options.ref',\n      description: 'Allows passing in a ref returned an other hook. This allows styles to change for multiple states.',\n      default: 'undefined'\n    },\n    {\n      type: 'object',\n      key: 'Options.noMerge',\n      description: 'When the hover state is true, the default and hover styles will be merged, with the hover styles overriding the default styles. This is inline with how css works normally. To disable this, set the option to true.',\n      default: 'undefined'\n    },\n  ]}\n/>)","export default \"import React from 'react'\\nimport { useThemeHover, useTheme } from 're-theme'\\n\\nexport const UseThemeHoverButton = props => {\\n  const { components: { button } } = useTheme()\\n  const [ ref, theme ] = useThemeHover(button.default, button.hover)\\n\\n  return (\\n    <button ref={ ref } style={ theme } >\\n      { props.children }\\n    </button>\\n  )\\n}\";","import React from 'react'\nimport { withTheme } from 're-theme'\n\nexport const WithThemeButton = withTheme(props => {\n  const { theme } = props\n  return (\n    <button style={ theme.components.button.default } >\n      { props.children }\n    </button>\n  )\n})","import React from 'react'\nimport { Example } from '../../components'\nimport { WithThemeButton } from './withThemeButton'\n\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport WithThemeButtonTxt from '!!raw-loader!./withThemeButton.js'\n\nconst description = (\n  <p>\n    Wrap your components in the <b>withTheme</b> <a href=\"https://reactjs.org/docs/higher-order-components.html\" >HOC (Higher Order Component)</a> to add the app theme to the components props. Uses the <a href=\"https://reactjs.org/docs/context.html\" >React Context API</a> under the hood.\n  </p>\n)\n\nexport const WithThemeExample =({ toggled }) => (<Example\n  isToggled={ toggled }\n  description={ description }\n  headerText={ 'withTheme' }\n  component={ <WithThemeButton>withTheme Button</WithThemeButton> }\n  codeText={ WithThemeButtonTxt }\n/>)","export default \"import React from 'react'\\nimport { withTheme } from 're-theme'\\n\\nexport const WithThemeButton = withTheme(props => {\\n  const { theme } = props\\n  return (\\n    <button style={ theme.components.button.default } >\\n      { props.children }\\n    </button>\\n  )\\n})\";","import React from 'react'\nimport { withTheme } from 're-theme'\nimport { get } from 'jsutils'\nimport {\n  Readme,\n  ReuseRefExample,\n  Section,\n  ThemeProviderExample,\n  WithThemeExample,\n  UseThemeExample,\n  UseThemeActiveExample,\n  UseThemeFocusExample,\n  UseThemeHoverExample,\n} from '../components'\nimport ForkMeOnGithub from 'fork-me-on-github'\n\nexport const AppScreen = withTheme(props => {\n  \n  const { theme } = props\n\n  const appStyle = theme.join(\n    get(theme, 'layout.full.height'),\n    get(theme, 'layout.full.width'),\n    { marginTop: 20 }\n  )\n\n  const gridStyle = theme.join(\n    get(theme, 'margin.bottom')\n  )\n\n  return (\n    <div style={ appStyle } >\n\n      <ForkMeOnGithub\n        repo=\"https://https://github.com/simpleviewinc/sv-re-theme\"\n        colorBackground=\"black\"\n        colorOctocat=\"white\"\n      />\n\n      <Section\n        style={ gridStyle }\n        title={ 'ReTheme' }\n        theme={ theme }\n        toggled={ true }\n        Element={ Readme }\n      />\n\n      <Section style={ gridStyle } title={ 'Provider' } theme={ theme } >\n        <ThemeProviderExample />\n      </Section>\n\n      <Section style={ gridStyle } title={ 'HOC' } theme={ theme } >\n        <WithThemeExample />\n      </Section>\n\n      <Section style={ gridStyle } title={ 'Hooks' } theme={ theme } >\n        <UseThemeExample />\n        <UseThemeHoverExample />\n        <UseThemeActiveExample />\n        <UseThemeFocusExample />\n        <ReuseRefExample />\n      </Section>\n\n    </div>\n  )\n\n})\n\n","const textStyle = {\n  backgroundColor: '#fefefe',\n  color: '#333333',\n  borderBottom: '1px solid #e5ecea',\n}\n\nexport const app = {\n  grid: {\n    title: {\n      ...textStyle,\n      width: '100%',\n      marginBottom: 30,\n      borderBottom: 'none'\n    }\n  },\n  header: {\n    default: {\n      ...textStyle,\n      cursor: 'pointer',\n      transition: 'all .5s ease',\n      width: '100%'\n    },\n    hover: {\n      color: '#0b81fc'\n    }\n  },\n  section: {},\n  example: {\n    wrapper: {\n      paddingLeft: 30,\n      paddingRight: 30,\n      maxHeight: 0,\n      width: 'auto'\n    },\n    grid: {\n      container: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr 1fr 3fr',\n        border: '1px solid #cccccc',\n        borderLeft: 'none',\n      },\n      header: {\n        backgroundColor: '#e5ecea',\n        borderTop: 'none',\n      },\n      prop: {\n        padding: '8px 5px',\n        borderTop: '1px solid #cccccc',\n        borderLeft: '1px solid #cccccc',\n      }\n    }\n  }\n}","import { isNum, isStr, capitalize, isArr } from 'jsutils'\n\nconst allSides = [ 'left', 'right', 'top', 'bottom' ]\nlet defUnits = 'px'\n\nexport const spaceHelper = (amount, sides = [], type) => {\n  sides = (sides.length && sides) || allSides\n  if (sides === 'all' || (isArr(sides) && sides[0] === 'all')) sides = allSides\n\n  return sides.reduce((styles, side) => {\n    styles[`${type}${capitalize(side)}`] = unitsHelper(amount)\n\n    return styles\n  }, {})\n}\n\nexport const unitsHelper = value => {\n  if (!isStr(value) && !isNum(value)) return value\n  if (isStr(value)) {\n    const amount = parseInt(value)\n    if ((amount || amount === 0) && amount.toString() === value)\n      value += defUnits\n  }\n else value += defUnits\n\n  return value\n}","import { spaceHelper } from './helpers'\n\n// -------- Space styles -------- //\nconst paddingSize = 15\nconst marginSize = 15\nconst padding = (amount, sides = []) => spaceHelper(amount, sides, 'padding')\npadding.size = paddingSize\npadding.full = { padding: paddingSize }\npadding.all = padding.full\npadding.vert = { paddingLeft: paddingSize, paddingRight: paddingSize }\npadding.left = { paddingLeft: paddingSize }\npadding.right = { paddingRight: paddingSize }\npadding.hor = { paddingTop: paddingSize, paddingBottom: paddingSize }\npadding.top = { paddingTop: paddingSize }\npadding.bottom = { paddingBottom: paddingSize }\n\nconst margin = (amount, sides = []) => spaceHelper(amount, sides, 'margin')\nmargin.size = marginSize\nmargin.full = { margin: marginSize }\nmargin.all = margin.full\nmargin.vert = { marginLeft: marginSize, marginRight: marginSize }\nmargin.left = { marginLeft: marginSize }\nmargin.right = { marginRight: marginSize }\nmargin.hor = { marginTop: marginSize, marginBottom: marginSize }\nmargin.top = { marginTop: marginSize }\nmargin.bottom = { marginBottom: marginSize }\n\n// -------- Flex styles -------- //\nconst flex = {\n  display: { display: 'flex' },\n  wrap: { flexWrap: 'wrap' },\n}\n\nflex.direction = dir => ({ flexDirection: dir })\nflex.direction.row = { flexDirection: 'row' }\nflex.direction.column = { flexDirection: 'column' }\nflex.row = flex.direction.row\nflex.column = flex.direction.column\n\nflex.justify = dir => ({ justifyContent: dir })\nflex.justify.start = { justifyContent: 'flex-start' }\nflex.justify.end = { justifyContent: 'flex-end' }\nflex.justify.center = { justifyContent: 'center' }\nflex.justify.between = { justifyContent: 'space-between' }\nflex.justify.around = { justifyContent: 'space-around' }\nflex.justify.even = { justifyContent: 'space-evenly' }\n\nflex.align = dir => ({ alignItems: dir })\nflex.align.start = { alignItems: 'flex-start' }\nflex.align.end = { alignItems: 'flex-end' }\nflex.align.center = { alignItems: 'center' }\nflex.align.stretch = { alignItems: 'stretch' }\nflex.align.base = { alignItems: 'baseline' }\n\n\n// -------- Layout styles -------- //\nconst layout = {\n  grid: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    minWidth: '100%',\n  },\n  row: {\n    minWidth: '100%',\n  },\n  column: {},\n  columns: 12,\n  full: {\n    width: {\n      width: '100%',\n    },\n    height: {\n      minHeight: '100vh',\n      overflowY: 'auto',\n      overflowX: 'hidden',\n    },\n  },\n  float: {\n    left: { float: 'left' },\n    right: { float: 'right' },\n    none: { float: 'none' },\n  }\n}\n\nexport { flex, layout, margin, padding, padding as pad }","import { app } from './app'\nimport { components } from './components'\nimport { display } from './display'\nimport { join } from './join'\nimport { padding, margin, flex, layout } from './layout'\nimport { setDefaultTheme } from 're-theme'\nimport { transition } from './transition'\n\nexport const theme = setDefaultTheme({\n  app,\n  components,\n  display,\n  flex,\n  join,\n  layout,\n  margin,\n  padding,\n  transition,\n})\n","export const components = {\n  button: {\n    default: {\n      backgroundColor: '#0b81fc',\n      color: '#fefefe',\n      padding: '12px 16px',\n      cursor: 'pointer',\n      borderRadius: '20px',\n      border: 'none',\n      outline: 'none',\n    },\n    hover: {\n      backgroundColor: '#45b549',\n    }\n  },\n  customInput: {\n    default: {\n      label: {\n        position: 'relative',\n        boxSizing: 'border-box',\n        display: 'grid',\n        width: '100%',\n        maxWidth: 280,\n      },\n      input: {\n        boxSizing: 'border-box',\n        width: '100%',\n        border: 0,\n        fontFamily: 'inherit',\n        padding: '12px 0',\n        height: '48px',\n        fontSize: 16,\n        fontWeight: 500,\n        borderBottom: '2px solid #C8CCD4',\n        background: 'none',\n        borderRadius: 0,\n        color: '#223254',\n        transition: 'all .15s ease'\n      },\n      spanText: {\n        boxSizing: 'border-box',\n        position: 'absolute',\n        top: '16px',\n        left: 0,\n        fontSize: 16,\n        color: '#9098A9',\n        fontWeight: 500,\n        transformOrigin: '0 0',\n        transition: 'all .2s ease'\n      },\n      spanBorder: {\n        boxSizing: 'border-box',\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        height: '2px',\n        width: '100%',\n        background: '#0077FF',\n        transform: 'scaleX(0)',\n        transformOrigin: '0 0',\n        transition: 'all .15s ease'\n      },\n    },\n    hover: {\n      input: {\n        background: 'rgba(#223254,.03)'\n      },\n      // spanText: {\n      //   color: '#0077FF',\n      //   transform: 'translateY(-26px) scale(.75)'\n      // },\n      spanBorder: {\n        transform: 'scaleX(1)'\n      }\n    },\n    focus: {\n      input:{\n        background: 'none',\n        outline: 'none',\n        borderBottom: 'none',\n      },\n      spanText: {\n        color: '#0077FF',\n        transform: 'translateY(-26px) scale(.75)'\n      },\n      // spanBorder: {\n      //   transform: 'scaleX(1)'\n      // }\n    }\n  }\n}","export const display = {\n  content: {\n    center: {\n      display: 'flex',\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    left: {\n      display: 'flex',\n      flex: 1,\n      justifyContent: 'flex-start',\n      alignItems: 'flex-start',\n    },\n    right: {\n      display: 'flex',\n      flex: 1,\n      justifyContent: 'flex-end',\n      alignItems: 'flex-end',\n    },\n  },\n  divider: {\n    width: '100%',\n    backgroundColor: 'rgba(0,0,0,.12)',\n  },\n  click: {\n    cursor: 'pointer',\n  },\n  noRadius: {\n    borderRadius: 0,\n  },\n}\n","import { deepMerge, isArr, isObj, isStr, get } from 'jsutils'\n\nexport const join = (arg1, arg2, ...sources) => {\n  return isObj(arg1) && isArr(arg2) && (isStr(arg2[0]) || isArr(arg2[0]))\n    ? deepMerge( ...arg2.map(arg => get(arg1, arg)) )\n    : deepMerge(arg1, arg2, ...sources)\n}","export const transition = {\n  height: {\n    overflow: 'hidden',\n    transition: 'max-height 1s ease',\n  },\n  rotate: {\n    default: { transition: 'transform 1s ease' },\n    180: { transform: 'rotate(180deg)' }\n  },\n}","import React from 'react'\nimport { AppScreen } from './screens'\nimport { theme } from './theme'\nimport { ReThemeProvider } from 're-theme'\n\nfunction App() {\n  return (\n    <ReThemeProvider theme={theme} merge={false}>\n      <AppScreen />\n    </ReThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.css'\nimport './styles/github.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}